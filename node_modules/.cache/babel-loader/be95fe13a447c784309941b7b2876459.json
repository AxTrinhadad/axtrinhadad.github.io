{"ast":null,"code":"import _toConsumableArray from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Dishes/Dishes.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderFlow from './../OrderFlow/OrderFlow';\nimport JsonData from './../../../data/dishes.json';\n\nvar Dishes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dishes, _Component);\n\n  function Dishes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dishes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dishes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dish: '',\n      servings: '',\n      dishOptions: []\n    };\n\n    _this.handleDishes = function (e) {\n      e.preventDefault();\n\n      _this.setState(_objectSpread({}, _this.state, _defineProperty({}, e.target.name, e.target.value)));\n\n      _this.props.handleChange(e);\n    };\n\n    _this.handleAddDish = function (e) {\n      e.preventDefault();\n      var addCurrentDish = _this.state.dish;\n      var addCurrentServ = _this.state.servings;\n      console.log(addCurrentDish, addCurrentServ);\n\n      _this.props.addDish(addCurrentDish, addCurrentServ);\n    };\n\n    _this.handleContinue = function (e) {\n      e.preventDefault();\n      var servings = Object.values(_this.props.dishes);\n      var updServingTotal = 0;\n\n      for (var _i = 0; _i < servings.length; _i++) {\n        var serving = servings[_i];\n        updServingTotal = updServingTotal + serving;\n      }\n\n      console.log(updServingTotal);\n\n      if (function (updServingTotal) {\n        return _this.props.numberPeople;\n      }) {\n        _this.props.nextStep();\n      } else {\n        _this.setState({\n          errorMessage: 'Please ensure all fields have been entered'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Dishes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dishData = JsonData.dishes;\n      var dishes = dishData.map(function (item) {\n        var dish = item.name;\n        var restaurant = item.restaurant;\n        var availableMeal = item.availableMeals;\n        console.log(restaurant);\n\n        if (restaurant === _this2.props.restaurant) {\n          return availableMeal.filter(function (value) {\n            return value === _this2.props.meal;\n          }).map(function (key) {\n            return dish;\n          });\n        } else {\n          return null;\n        }\n      }).flat();\n\n      var updatedDishes = _toConsumableArray(new Set(dishes.filter(Boolean)));\n\n      this.setState({\n        dishOptions: _toConsumableArray(new Set(updatedDishes))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dishes = _toConsumableArray(this.state.dishOptions);\n\n      var dishOptions = dishes.map(function (value, key) {\n        return React.createElement(MenuItem, {\n          key: key,\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, value);\n      });\n      var numberOfServings = [];\n\n      for (var i = 1; i < 11; i++) {\n        numberOfServings.push(React.createElement(MenuItem, {\n          key: i,\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, i));\n      }\n\n      var displayErrorMessage;\n\n      if (this.state.errorMessage) {\n        displayErrorMessage = React.createElement(\"p\", {\n          className: \"errorMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, this.state.errorMessage);\n      }\n\n      var orderedDishes = this.props.dishes;\n      var orderedDishesList = [];\n      var dishCount = 0;\n\n      if (orderedDishes) {\n        for (var key in orderedDishes) {\n          if (orderedDishes.hasOwnProperty(key)) {\n            dishCount += 1;\n            var dishQuantity = orderedDishes[key];\n            orderedDishesList.push(React.createElement(TableRow, {\n              key: dishCount,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, React.createElement(TableCell, {\n              align: \"left\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }, dishCount), React.createElement(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, key), React.createElement(TableCell, {\n              align: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, dishQuantity)));\n          }\n        }\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Step 3\"), displayErrorMessage, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Please select a dish\"), React.createElement(Select, {\n        value: this.state.dish,\n        onChange: this.handleDishes,\n        inputProps: {\n          name: 'dish'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, dishOptions))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Please enter no. of servings\"), React.createElement(Select, {\n        value: this.state.servings,\n        onChange: this.handleDishes,\n        inputProps: {\n          name: 'servings'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, numberOfServings))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleAddDish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"add_circle\"), \" Add Dish\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"#\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Dish\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Servings\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, orderedDishesList)))), React.createElement(OrderFlow, {\n        activeStep: 2,\n        prevStep: this.props.prevStep,\n        continue: this.handleContinue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dishes;\n}(Component);\n\nexport default Dishes;","map":{"version":3,"sources":["/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Dishes/Dishes.js"],"names":["React","Component","Grid","FormControl","InputLabel","Typography","Select","MenuItem","Button","Icon","Table","TableBody","TableCell","TableHead","TableRow","OrderFlow","JsonData","Dishes","state","dish","servings","dishOptions","handleDishes","e","preventDefault","setState","target","name","value","props","handleChange","handleAddDish","addCurrentDish","addCurrentServ","console","log","addDish","handleContinue","Object","values","dishes","updServingTotal","serving","numberPeople","nextStep","errorMessage","dishData","map","item","restaurant","availableMeal","availableMeals","filter","meal","key","flat","updatedDishes","Set","Boolean","numberOfServings","i","push","displayErrorMessage","orderedDishes","orderedDishesList","dishCount","hasOwnProperty","dishQuantity","prevStep"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport OrderFlow from './../OrderFlow/OrderFlow';\n\nimport JsonData from './../../../data/dishes.json'\n\nclass Dishes extends Component {\n    state = { \n        dish: '',\n        servings: '',\n        dishOptions: []\n    }\n\n    \n    handleDishes = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value,\n        });\n\n        this.props.handleChange(e);\n    } \n\n    handleAddDish = (e) => {\n        e.preventDefault();\n\n        const addCurrentDish = this.state.dish;\n        const addCurrentServ = this.state.servings;\n\n        console.log(addCurrentDish,addCurrentServ)\n\n        this.props.addDish(addCurrentDish, addCurrentServ);\n    }\n\n    handleContinue = (e) => {\n        e.preventDefault();\n\n        const servings = Object.values(this.props.dishes);\n        let updServingTotal = 0;\n\n        for (const serving of servings) {\n            updServingTotal = updServingTotal + serving;\n        }\n        \n        console.log(updServingTotal);\n\n        if (updServingTotal => this.props.numberPeople) {\n            this.props.nextStep();\n        } else {\n            this.setState({\n                errorMessage: 'Please ensure all fields have been entered',\n            });\n        }\n    } \n\n    componentDidMount() {\n        const dishData = JsonData.dishes;\n        let dishes = dishData.map((item) => {\n            let dish = item.name;\n            let restaurant = item.restaurant;\n            let availableMeal = item.availableMeals;\n            console.log(restaurant);\n            if (restaurant === this.props.restaurant) {\n                return availableMeal\n                    .filter((value) => value === this.props.meal)  \n                    .map((key) => {\n                        return dish;\n                    })\n            } else {\n                return null;\n            }    \n        }).flat();\n\n        const updatedDishes = [...new Set(dishes.filter(Boolean))]\n\n        this.setState({\n            dishOptions: [...new Set(updatedDishes)]\n        });\n        \n    }\n\n    render () {\n        const dishes = [...this.state.dishOptions];\n        let dishOptions = dishes.map((value,key) => {\n            return <MenuItem key={key} value={value}>{value}</MenuItem>;\n        });\n\n        let numberOfServings = []; \n\n        for (let i = 1; i < 11; i++) {\n            numberOfServings.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n        }\n\n        let displayErrorMessage;\n        if (this.state.errorMessage) {\n            displayErrorMessage = <p className=\"errorMessage\">{this.state.errorMessage}</p>;\n        }\n\n        const orderedDishes = this.props.dishes;\n        let orderedDishesList = [];\n        let dishCount = 0;\n        if (orderedDishes) {\n            for (let key in orderedDishes) {\n                if (orderedDishes.hasOwnProperty(key)) {\n                    dishCount += 1;\n                    const dishQuantity = orderedDishes[key];\n                    orderedDishesList.push(\n                        <TableRow key={dishCount}>\n                        <TableCell align=\"left\">{dishCount}</TableCell>\n                        <TableCell component=\"th\" scope=\"row\">{key}</TableCell>\n                        <TableCell align=\"right\">{dishQuantity}</TableCell>\n                        </TableRow>);\n                }\n            }\n        }    \n            \n        \n\n        return (\n            <>\n                <Typography variant=\"h6\" gutterBottom>\n                    Step 3\n                </Typography>\n                {displayErrorMessage}\n                <Grid container spacing={24} alignItems=\"center\"> \n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"demo-controlled-open-select\">Please select a dish</InputLabel>\n                            <Select\n                                value={this.state.dish}\n                                onChange={this.handleDishes}\n                                inputProps={{\n                                    name: 'dish'\n                                }}>\n                                {dishOptions}\n                            </Select>\n                        </FormControl>\n                    </Grid> \n                    <Grid item xs={12} sm={6}> \n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"demo-controlled-open-select\">Please enter no. of servings</InputLabel>\n                            <Select\n                                value={this.state.servings}\n                                onChange={this.handleDishes}\n                                inputProps={{\n                                    name: 'servings'\n                                }}>\n                                {numberOfServings}\n                            </Select>\n                        </FormControl> \n                    </Grid>\n                    <Grid item xs={6} sm={3}> \n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.handleAddDish}\n                            >\n                            <Icon>add_circle</Icon> Add Dish\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12} sm={6}> \n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell>Dish</TableCell>\n                                    <TableCell align=\"right\">Servings</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {orderedDishesList}\n                            </TableBody>\n                        </Table>\n                    </Grid>\n                    \n\n                </Grid>\n                <OrderFlow \n                    activeStep={2}\n                    prevStep={this.props.prevStep}\n                    continue={this.handleContinue} />  \n            </>\n        );\n    }\n}\n\nexport default Dishes;"]},"metadata":{},"sourceType":"module"}