{"ast":null,"code":"import _toConsumableArray from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Restaurants/Restaurants.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OrderFlow from './../OrderFlow/OrderFlow';\nimport JsonData from './../../../data/dishes.json';\n\nvar Restaurants =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Restaurants, _Component);\n\n  function Restaurants() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Restaurants);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Restaurants)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      restaurantError: false,\n      errorMessage: null,\n      restaurantOptions: []\n    };\n\n    _this.handleContinue = function (e) {\n      e.preventDefault();\n      var isValid = true;\n\n      if (!_this.props.restaurant) {\n        isValid = false;\n      }\n\n      if (isValid) {\n        _this.setState({\n          errorMessage: null,\n          restaurantError: false\n        });\n\n        _this.props.nextStep();\n      } else {\n        _this.setState({\n          errorMessage: 'Please ensure all fields have been entered',\n          restaurantError: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Restaurants, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Handle Json Data\n      var dishData = JsonData.dishes;\n      var restaurants = dishData.map(function (item) {\n        var availableMeal = item.availableMeals;\n        var demo = availableMeal.filter(function (value) {\n          return value === _this2.props.meal;\n        }).map(function (meal) {\n          return item.restaurant;\n        });\n\n        if (demo.length) {\n          console.log(demo);\n          return demo;\n        }\n      });\n      var sumthing = new Set(restaurants);\n      console.log(sumthing);\n      this.setState({\n        restaurantOptions: _toConsumableArray(new Set(restaurants))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var restaurants = _toConsumableArray(this.state.restaurantOptions);\n\n      var restaurantOptions = [];\n      restaurants.map(function (value, key) {\n        restaurantOptions.push(React.createElement(MenuItem, {\n          key: key,\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, value));\n      });\n      var displayErrorMessage;\n\n      if (this.state.errorMessage) {\n        displayErrorMessage = React.createElement(\"p\", {\n          className: \"errorMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, this.state.errorMessage);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Step 2\"), displayErrorMessage, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        error: this.state.restaurantError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Please select a restaurant\"), React.createElement(Select, {\n        value: this.props.restaurant,\n        onChange: this.props.handleChange,\n        inputProps: {\n          name: 'restaurant'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, restaurantOptions)))), React.createElement(OrderFlow, {\n        activeStep: 1,\n        prevStep: this.props.prevStep,\n        continue: this.handleContinue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Restaurants;\n}(Component);\n\nexport default Restaurants;","map":{"version":3,"sources":["/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Restaurants/Restaurants.js"],"names":["React","Component","Grid","FormControl","InputLabel","Typography","Select","MenuItem","OrderFlow","JsonData","Restaurants","state","restaurantError","errorMessage","restaurantOptions","handleContinue","e","preventDefault","isValid","props","restaurant","setState","nextStep","dishData","dishes","restaurants","map","item","availableMeal","availableMeals","demo","filter","value","meal","length","console","log","sumthing","Set","key","push","displayErrorMessage","handleChange","name","prevStep"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport OrderFlow from './../OrderFlow/OrderFlow';\n\nimport JsonData from './../../../data/dishes.json'\n\nclass Restaurants extends Component {\n    state = {\n        restaurantError: false,\n        errorMessage: null,\n        restaurantOptions: []\n    }\n\n    handleContinue = (e) => {\n        e.preventDefault();\n\n        let isValid = true;\n\n        if (!this.props.restaurant) {\n            isValid = false;\n        }\n            \n        if (isValid) {\n            this.setState({\n                errorMessage: null,\n                restaurantError: false\n            });\n\n            this.props.nextStep();\n        } else {\n            this.setState({\n                errorMessage: 'Please ensure all fields have been entered',\n                restaurantError: true\n            });\n        }\n    } \n\n    componentDidMount() {\n        //Handle Json Data\n        const dishData = JsonData.dishes;\n        let restaurants = dishData.map((item) => {\n            let availableMeal = item.availableMeals;\n\n            let demo = availableMeal\n                .filter((value) => value === this.props.meal)\n                .map((meal) => {\n                    return item.restaurant;\n                });\n\n            if (demo.length) {\n                console.log(demo);  \n                return demo\n            }\n\n              \n        });\n\n        let sumthing = new Set(restaurants);\n\n        console.log(sumthing);\n\n        this.setState({\n            restaurantOptions: [...new Set(restaurants)]\n        });\n        \n    }\n\n    render () {\n        const restaurants = [...this.state.restaurantOptions];\n        let restaurantOptions = [];\n        restaurants.map((value,key) => {\n            restaurantOptions.push(<MenuItem key={key} value={value}>{value}</MenuItem>);\n        });\n\n        let displayErrorMessage;\n        if (this.state.errorMessage) {\n            displayErrorMessage = <p className=\"errorMessage\">{this.state.errorMessage}</p>;\n        }\n\n        return (\n            <> \n                <Typography variant=\"h6\" gutterBottom>\n                    Step 2\n                </Typography>\n                {displayErrorMessage}\n                <Grid container spacing={24}>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth error={this.state.restaurantError}>\n                            <InputLabel htmlFor=\"demo-controlled-open-select\">Please select a restaurant</InputLabel>\n                            <Select\n                                value={this.props.restaurant}\n                                onChange={this.props.handleChange}\n                                inputProps={{\n                                    name: 'restaurant'\n                                }}>\n                                {restaurantOptions}\n                            </Select>\n                        </FormControl>\n                    </Grid>   \n                </Grid> \n                <OrderFlow \n                    activeStep={1}\n                    prevStep={this.props.prevStep}\n                    continue={this.handleContinue} /> \n            </>\n        );\n    }\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}