{"ast":null,"code":"import _classCallCheck from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Review/Review.js\";\nimport React from 'react';\n\nvar Review =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Review, _Component);\n\n  function Review() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Review);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Review)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmission = function (e) {\n      e.preventDefault();\n      var servings = Object.values(_this.props.dishes);\n      var updServingTotal = 0;\n\n      for (var _i = 0; _i < servings.length; _i++) {\n        var serving = servings[_i];\n        updServingTotal = updServingTotal + serving;\n      }\n\n      if (updServingTotal >= _this.props.numberPeople) {\n        _this.props.nextStep();\n      } else {\n        var errorMsg = 'Please ensure you have enough dishes for the number of people (' + _this.props.numberPeople + ')';\n\n        _this.setState({\n          errorMessage: errorMsg\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Review, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Review\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        error: this.state.dishError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Please select a dish\"), React.createElement(Select, {\n        value: this.state.dish,\n        onChange: this.handleDishes,\n        inputProps: {\n          name: 'dish'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, dishOptions))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        error: this.state.servError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Please enter no. of servings\"), React.createElement(Select, {\n        value: this.state.servings,\n        onChange: this.handleDishes,\n        inputProps: {\n          name: 'servings'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, numberOfServings))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleAddDish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"add_circle\"), \" Add Dish\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(DishesList, {\n        dishes: this.props.dishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(OrderFlow, {\n        activeStep: 3,\n        prevStep: this.props.prevStep,\n        continue: this.handleSubmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Review;\n}(Component);\n\nexport default Review;","map":{"version":3,"sources":["/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Review/Review.js"],"names":["React","Review","handleSubmission","e","preventDefault","servings","Object","values","props","dishes","updServingTotal","serving","numberPeople","nextStep","errorMsg","setState","errorMessage","state","dishError","dish","handleDishes","name","dishOptions","servError","numberOfServings","handleAddDish","prevStep","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Review extends Component {\n    handleSubmission = (e) => {\n        e.preventDefault();\n\n        const servings = Object.values(this.props.dishes);\n        let updServingTotal = 0;\n\n        for (const serving of servings) {\n            updServingTotal = updServingTotal + serving;\n        }\n\n        if (updServingTotal >= this.props.numberPeople) {\n            this.props.nextStep();\n        } else {\n            let errorMsg = 'Please ensure you have enough dishes for the number of people (' + this.props.numberPeople + ')';\n            this.setState({\n                errorMessage: errorMsg\n            });\n        }\n    } \n\n    render () {\n\n        \n         \n\n        return (\n            <>\n                <Typography variant=\"h6\" gutterBottom>\n                    Review\n                </Typography>\n                <Grid container spacing={24} alignItems=\"center\"> \n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth error={this.state.dishError}>\n                            <InputLabel htmlFor=\"demo-controlled-open-select\">Please select a dish</InputLabel>\n                            <Select\n                                value={this.state.dish}\n                                onChange={this.handleDishes}\n                                inputProps={{\n                                    name: 'dish'\n                                }}>\n                                {dishOptions}\n                            </Select>\n                        </FormControl>\n                    </Grid> \n                    <Grid item xs={12} sm={6}> \n                        <FormControl fullWidth error={this.state.servError}>\n                            <InputLabel htmlFor=\"demo-controlled-open-select\">Please enter no. of servings</InputLabel>\n                            <Select\n                                value={this.state.servings}\n                                onChange={this.handleDishes}\n                                inputProps={{\n                                    name: 'servings'\n                                }}>\n                                {numberOfServings}\n                            </Select>\n                        </FormControl> \n                    </Grid>\n                    <Grid item xs={6} sm={3}> \n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.handleAddDish}\n                            >\n                            <Icon>add_circle</Icon> Add Dish\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12} sm={6}> \n                        <DishesList dishes={this.props.dishes} />\n                    </Grid>\n                    \n\n                </Grid>\n                <OrderFlow \n                    activeStep={3}\n                    prevStep={this.props.prevStep}\n                    continue={this.handleSubmission} />  \n            </>\n        );\n    }\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}