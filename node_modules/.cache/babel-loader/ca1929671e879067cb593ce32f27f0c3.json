{"ast":null,"code":"import _classCallCheck from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AxMac/Sites/zp-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Review/Review.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport OrderFlow from './../OrderFlow/OrderFlow';\nimport DishesList from './DishesList';\n\nvar Review =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Review, _Component);\n\n  function Review() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Review);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Review)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmission = function (e) {\n      e.preventDefault();\n      var servings = Object.values(_this.props.dishes);\n      var updServingTotal = 0;\n\n      for (var _i = 0; _i < servings.length; _i++) {\n        var serving = servings[_i];\n        updServingTotal = updServingTotal + serving;\n      }\n\n      if (updServingTotal >= _this.props.numberPeople) {\n        _this.props.nextStep();\n      } else {\n        var errorMsg = 'Please ensure you have enough dishes for the number of people (' + _this.props.numberPeople + ')';\n\n        _this.setState({\n          errorMessage: errorMsg\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Review, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Review\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(DishesList, {\n        dishes: this.props.dishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(OrderFlow, {\n        activeStep: 3,\n        prevStep: this.props.prevStep,\n        continue: this.handleSubmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Review;\n}(Component);\n\nexport default Review;","map":{"version":3,"sources":["/Users/AxMac/Sites/zp-assignment/src/components/OrderSystem/Review/Review.js"],"names":["React","Component","Grid","FormControl","InputLabel","Typography","Select","MenuItem","Button","Icon","OrderFlow","DishesList","Review","handleSubmission","e","preventDefault","servings","Object","values","props","dishes","updServingTotal","serving","numberPeople","nextStep","errorMsg","setState","errorMessage","prevStep"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,M;;;;;;;;;;;;;;;;;;UACFC,gB,GAAmB,UAACC,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,MAAKC,KAAL,CAAWC,MAAzB,CAAjB;AACA,UAAIC,eAAe,GAAG,CAAtB;;AAEA,4BAAsBL,QAAtB,eAAgC;AAA3B,YAAMM,OAAO,GAAIN,QAAJ,IAAb;AACDK,QAAAA,eAAe,GAAGA,eAAe,GAAGC,OAApC;AACH;;AAED,UAAID,eAAe,IAAI,MAAKF,KAAL,CAAWI,YAAlC,EAAgD;AAC5C,cAAKJ,KAAL,CAAWK,QAAX;AACH,OAFD,MAEO;AACH,YAAIC,QAAQ,GAAG,oEAAoE,MAAKN,KAAL,CAAWI,YAA/E,GAA8F,GAA7G;;AACA,cAAKG,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAEF;AADJ,SAAd;AAGH;AACJ,K;;;;;;;6BAES;AAEN,aACI,0CACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAA6B,QAAA,UAAU,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAQI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARJ,CAJJ,EAkBI,oBAAC,SAAD;AACI,QAAA,UAAU,EAAE,CADhB;AAEI,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWS,QAFzB;AAGI,QAAA,QAAQ,EAAE,KAAKf,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CADJ;AAyBH;;;;EAhDgBZ,S;;AAmDrB,eAAeW,MAAf","sourcesContent":["import React, { Component} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\nimport OrderFlow from './../OrderFlow/OrderFlow';\nimport DishesList from './DishesList';\n\n\nclass Review extends Component {\n    handleSubmission = (e) => {\n        e.preventDefault();\n\n        const servings = Object.values(this.props.dishes);\n        let updServingTotal = 0;\n\n        for (const serving of servings) {\n            updServingTotal = updServingTotal + serving;\n        }\n\n        if (updServingTotal >= this.props.numberPeople) {\n            this.props.nextStep();\n        } else {\n            let errorMsg = 'Please ensure you have enough dishes for the number of people (' + this.props.numberPeople + ')';\n            this.setState({\n                errorMessage: errorMsg\n            });\n        }\n    } \n\n    render () {         \n\n        return (\n            <>\n                <Typography variant=\"h6\" gutterBottom>\n                    Review\n                </Typography>\n                <Grid container spacing={24} alignItems=\"center\"> \n                    <Grid item xs={12} sm={6}>\n                        \n                    </Grid> \n                    <Grid item xs={12} sm={6}> \n                        \n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6}> \n                        <DishesList dishes={this.props.dishes} />\n                    </Grid>\n                    \n\n                </Grid>\n                <OrderFlow \n                    activeStep={3}\n                    prevStep={this.props.prevStep}\n                    continue={this.handleSubmission} />  \n            </>\n        );\n    }\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}